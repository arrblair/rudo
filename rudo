#!/usr/local/bin/ruby
require 'rubygems'
require 'dm-core'
require 'dm-migrations'

#DataMapper::Logger.new($stdout, :debug)
DataMapper.setup(:default, 'sqlite://' + File.expand_path('~/todo.db'))

class Task
  include DataMapper::Resource
  property :id,         Serial
  property :title,      String

  def initialize(title)
    self.title = title
  end

  def to_s
    self.title
  end
end

DataMapper.auto_upgrade!
DataMapper.finalize

case ARGV[0]
when 'add'
  if ARGV[1]
    Task.new(ARGV[1]).save
  else
    puts 'you need to give me a task to toss in there'
  end
when 'done'
  Task.first.destroy
when nil
when 'walk'
    Task.new(Task.first.to_s).save
    Task.first.destroy
else
  puts 'invalid argument'
  exit(0)
end
puts '*' * 40
Task.all.each_with_index do |task, index|
  break if index >= 10
  puts task
end
puts '*' * 40
