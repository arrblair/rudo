#!/usr/local/bin/ruby
require 'rubygems'
require 'dm-core'
require 'dm-migrations'
require 'dm-aggregates'
require File.join(File.dirname(__FILE__), 'task')
require File.join(File.dirname(__FILE__), 'list')
require File.join(File.dirname(__FILE__), 'colors')

# uncomment the following line to see database output
#DataMapper::Logger.new($stdout, :debug)

# if you want to muck around without using your actual todo list, type 'export DEV=true' at the command line
development = (ENV['DEV'] == 'true')
puts Colors.colored('--> in development mode <--', :red) if development
if development
  db_path = File.join(File.dirname(__FILE__), 'dev.db')
else
  db_path = File.expand_path('~/todo.db')
end

# DataMapper is an ORM, we're using sqlite as our database, 'cause it's easy
DataMapper.setup(:default, 'sqlite://' + db_path)
DataMapper.finalize
DataMapper.auto_upgrade!

begin
  list = List.new
  if ARGV[0]
    if ARGV[1]
      # send tries to call the method with the name in ARGV[0]
      list.send(ARGV[0], ARGV[1])
    else
      list.send(ARGV[0])
    end
  else
    list.print_tasks
  end
rescue NoMethodError => ex
  # catch the error where List doesn't have the method from ARGV[0]
  puts "X"*40
  puts "no such option, try 'add', 'done', or 'walk'"
  puts "X"*40
  puts ex.backtrace if development
rescue Exception => ex
  # catch and print errors raised by the call to List
  puts "X"*40
  puts ex.message
  puts "X"*40
  puts ex.backtrace if development
end
