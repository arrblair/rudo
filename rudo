#!/usr/local/bin/ruby
require 'rubygems'
require 'dm-core'
require 'dm-migrations'
require 'dm-aggregates'
require File.join(File.dirname(__FILE__), 'task')
require File.join(File.dirname(__FILE__), 'list')
require File.join(File.dirname(__FILE__), 'colors')
require File.join(File.dirname(__FILE__), 'rtm')

# if you want to muck around without using your actual todo list, type 'export DEV=true' at the command line
development = (ENV['DEV'] == 'true')
puts Colors.colored('--> in development mode <--', :on_red) if development
if development
  db_path = File.join(File.dirname(__FILE__), 'dev.db')
  # uncomment the following line to see database output in dev mode
  # DataMapper::Logger.new($stdout, :debug)
else
  db_path = File.expand_path('~/todo.db')
end

# DataMapper is an ORM, we're using sqlite as our database, 'cause it's easy
DataMapper.setup(:default, 'sqlite://' + db_path)
DataMapper.finalize
DataMapper.auto_upgrade!

begin
  system('clear')
  list = List.first || List.new
  if ARGV[0]
    if list.methods.include? ARGV[0]
      if ARGV[1]
        list.send(ARGV[0], ARGV[1])
      else
        list.send(ARGV[0])
      end
    elsif Tag.all.collect{|tag|tag.title}.include? ARGV[0]
      if ARGV[1]
        list.tag(ARGV[0], ARGV[1])
      else
        list.tag(ARGV[0])
      end
    else
      raise "invalid argument, try 'add', 'done', or 'tag'"
    end
  else
    list.print_tasks
  end
rescue Exception => ex
  # catch and print errors raised by the call to List
  puts "X"*40
  puts ex.message
  puts "X"*40
  puts ex.backtrace if development
end
